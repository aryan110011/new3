import requests
import time
import random
import json

# ==================== CONFIG ====================
ACCESS_MODE = "cookie"  # "token" or "cookie"
FB_TOKEN = ""
FB_COOKIE = "your_facebook_cookie_here"
FB_ID = "your_facebook_id_here"
COMMENT_FILE = "comments.txt"
POST_IDS_FILE = "post_ids.txt"
TIME_DELAY = (10, 30)  # delay in seconds between comments

# =================================================

def get_headers():
    if ACCESS_MODE == "token":
        return {
            "Authorization": f"Bearer {FB_TOKEN}",
            "Content-Type": "application/json"
        }
    elif ACCESS_MODE == "cookie":
        return {
            "Cookie": FB_COOKIE,
            "User-Agent": "Mozilla/5.0",
        }
    else:
        raise Exception("Invalid ACCESS_MODE")

def read_comments():
    with open(COMMENT_FILE, "r", encoding="utf-8") as f:
        return [line.strip() for line in f if line.strip()]

def read_post_ids():
    with open(POST_IDS_FILE, "r") as f:
        return [line.strip() for line in f if line.strip()]

def send_comment(post_id, message):
    url = f"https://graph.facebook.com/{post_id}/comments"
    data = {
        "message": message,
        "access_token": FB_TOKEN
    }

    if ACCESS_MODE == "cookie":
        # Using cookie method (simulated request)
        url = f"https://mbasic.facebook.com/{post_id}"
        payload = {
            "fb_dtsg": "NA",  # Placeholder
            "comment_text": message
        }
        response = requests.post(url, data=payload, headers=get_headers())
    else:
        response = requests.post(url, data=data, headers=get_headers())

    return response.status_code, response.text

def main():
    comments = read_comments()
    post_ids = read_post_ids()

    for post_id in post_ids:
        try:
            comment = random.choice(comments)
            print(f"[+] Posting to {post_id}: {comment}")
            status, resp = send_comment(post_id, comment)
            print(f"    â†’ Status: {status}")
            time.sleep(random.randint(*TIME_DELAY))
        except Exception as e:
            print(f"[!] Error with post {post_id}: {e}")

if __name__ == "__main__":
    main()
